<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>powershell on blog... things...</title>
    <link>/tags/powershell/</link>
    <description>Recent content in powershell on blog... things...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2020-{year} Tom Ralph. All Rights Reserved.</copyright>
    <lastBuildDate>Mon, 21 Apr 2014 00:00:00 +0000</lastBuildDate><atom:link href="/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mass Update Media in vCloud Dicrector</title>
      <link>/posts/2014-04-21-2014421mass-update-media-in-vcloud-dicrector/</link>
      <pubDate>Mon, 21 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-04-21-2014421mass-update-media-in-vcloud-dicrector/</guid>
      <description>In vCloud 5.1 it is very difficult to move media from LUN to LUN once it is uploaded. In vCloud 5.5 this gets better but it is still a pain.
One method I have found that works is to disable the LUN you want the media moved off of, and change something on the media record. Something such as adding a &#39; &#39; (space) to the description will cause vCloud Director to copy the media to a new LUN.</description>
    </item>
    
    <item>
      <title>Relocating a VM in vCloud Director</title>
      <link>/posts/2014-04-16-2014416relocating-a-vm-in-vcloud-director/</link>
      <pubDate>Wed, 16 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-04-16-2014416relocating-a-vm-in-vcloud-director/</guid>
      <description>Occasionally I need to move a VM or vApp from datastore to datastore, various reasons why. Sometimes I need to break the linked clone tree and force vCenter to consolidate it. Sure I can power off the VM and execute a &amp;lsquo;consolidate&amp;rsquo; via the UI, but what if I need to keep the VM powered on? A storage vMotion does just that.
Sure you can fire up your vCenter Client or WebClient and move the VM that way.</description>
    </item>
    
    <item>
      <title>Remove vApp Template With No Catalog Item Link</title>
      <link>/posts/2014-04-14-2014414remove-vapp-template-with-no-catalog-item-link/</link>
      <pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-04-14-2014414remove-vapp-template-with-no-catalog-item-link/</guid>
      <description>First&amp;hellip; Did you know that vApp Templates and Catalog Items are two different things in vCloud Director? If so, did you know that you can have a vApp Tempalte that does not link to a catalog item? Finally, you can&amp;rsquo;t have a Catalog Item without a vApp Tempalte backing though.
Well I guess you could. If you manage to get one of those, you will want to follow my guide on fixing that here .</description>
    </item>
    
    <item>
      <title>Detecting and Removing Invalid vApps</title>
      <link>/posts/2014-04-09-201449detecting-and-removing-invalid-vapps/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-04-09-201449detecting-and-removing-invalid-vapps/</guid>
      <description>After you run vCloud for a while, heck run any management product for a while, and you will have left overs, hung items, or even corrupt vApps.
With vCloud Director you can run the below to find those items and remove them.
 $badvapp = Search-Cloud -QueryType AdminVapp | Where-Object { $_.Status -eq “UNRESOLVED&amp;quot; }
foreach ( $id in $badvapp ) {
Get-CIVApp -Id $id.id | Remove-CIVApp
}
 This probably wont remove everything, those items that are left, generally can only be removed via editing the database (I would not recommend that).</description>
    </item>
    
    <item>
      <title>Detecting and Removing Invalid vApp Templates</title>
      <link>/posts/2014-04-07-201447detecting-and-removing-vapp-templates/</link>
      <pubDate>Mon, 07 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-04-07-201447detecting-and-removing-vapp-templates/</guid>
      <description>In the event that a vApp Template or Catalog Item fails during the upload process parts of that vApp Template can be left behind. To find and remove those items run the following:
 $badvappt = Search-Cloud -QueryType AdminVappTemplate | Where-Object { $_.Status -eq &amp;ldquo;FAILED_Creation&amp;rdquo; }
foreach ( $id in $badvappt ) {
Get-CIVAppTemplate -Id $id.id | Remove-CIVAppTemplate -RemoveCatalogItem $false
}
 Run the first part to see what there is, run it all to remove broken vApp Templates.</description>
    </item>
    
    <item>
      <title>Modify Bulk vApp Network Attachments</title>
      <link>/posts/2014-04-02-201442modify-bulk-vapps-network-attachments/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-04-02-201442modify-bulk-vapps-network-attachments/</guid>
      <description>With vCloud Director if you need to change the Organization vDC Network, for instance you run out of IP addresses. You can use the script below to change the attached network of all powered off vApps.
 $vapps = search-cloud -QueryType VAppOrgNetworkRelation | Where-Object { $.OrgNetworkName -eq &amp;ldquo;Old Network Name&amp;rdquo; -and $.Status -eq &amp;ldquo;Stopped” }
foreach ($vapp in $vapps) {
get-civapp -id $vapp.id | Get-CIVAppNetwork -ErrorAction SilentlyContinue | Where-Object { $_.</description>
    </item>
    
    <item>
      <title>Query vCloud Director for Storage Profile Usage</title>
      <link>/posts/2014-04-01-2014422query-vcloud-director-for-storage-profile-usage/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-04-01-2014422query-vcloud-director-for-storage-profile-usage/</guid>
      <description>Often times an organization will have multiple Storage Profiles, different class fo storage, etc. The simple command of:
 Get-OrgVDC
 Returns a summary or cummulative view of the storage profile usage. To get the actual usage for each profile, execute this command:
 $OrgVdc = get-orgvdc (Org VDC Name)
search-cloud -querytype AdminOrgVdcStorageProfile | where { $_.VdcName -eq $orgvdc } | get-ciview
 </description>
    </item>
    
    <item>
      <title>Find Broken Catalog Items in vCloud 5.x</title>
      <link>/posts/2014-03-31-2014331find-broken-catalog-items-in-vcloud-5x/</link>
      <pubDate>Mon, 31 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-03-31-2014331find-broken-catalog-items-in-vcloud-5x/</guid>
      <description>Sometimes when uploading content into vCloud there is a chance that the content can be broken. This can cause programs to have errors. To find these items, run the following in PowerShell as the a &amp;lsquo;system administrator&amp;rsquo;.
 search-cloud -QueryType AdminCatalogItem | Where-Object { $_.Status -eq &amp;ldquo;Unknown&amp;rdquo; }
 You can now remove them utilizing the API or vCO and the &amp;lsquo;Remove Catalog Item&amp;rsquo; workflow.</description>
    </item>
    
    <item>
      <title>Ejecting CD ISO&#39;s in vCloud Director</title>
      <link>/posts/2014-03-28-2014327ejecting-cd-isos-in-vcloud-director/</link>
      <pubDate>Fri, 28 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014-03-28-2014327ejecting-cd-isos-in-vcloud-director/</guid>
      <description>With vCloud Director 5.1 every once in a while a CD will refuse to eject, or worse it will say it ejected the CD but it will not make the change in vCenter.
To get around this with PowerCLI connected to the vCenter use this command:
 get-folder | get-VM | Get-CDDrive | Set-CDDrive -NoMedia -Confirm:$false
 This will allow the CD to be ejected without having to Deploy, Eject, Re-Capture the vApp Template.</description>
    </item>
    
  </channel>
</rss>
